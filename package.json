{
  "name": "master_english_ielts",
  "version": "1.0.0",
  "description": "IELTS English learning platform with Playwright MCP and Cursor Agent integration",
  "main": "server.js",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "format": "prettier --write .",
    "mcp": "node mcp.js",
    "agent": "node cursor-agent-integration.js",
    "test": "playwright test",
    "upload:reading": "npx --yes ts-node generated_ielts_tests/scripts/upload_tests.ts",
    "upload:listening": "npx --yes ts-node generated_ielts_tests/scripts/upload_tests.ts listening",
    "upload:writing": "npx --yes ts-node generated_ielts_tests/scripts/upload_tests.ts writing",
    "upload:writing:academic": "npx --yes ts-node generated_ielts_tests/scripts/upload_tests.ts writing writing/academic",
    "upload:speaking": "npx --yes ts-node generated_ielts_tests/scripts/upload_tests.ts speaking",
    "gen:listening": "npx --yes tsx generated_ielts_tests/scripts/generate-listening.ts",
    "gen:listening:all": "node -e \"const fs=require('fs');const {execSync}=require('child_process');fs.readdirSync('listening',{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const p='listening/'+d.name+'/fetch.html'; if(fs.existsSync(p)) execSync('npx --yes tsx generated_ielts_tests/scripts/generate-listening.ts '+p, {stdio:'inherit'});});\"",
    "dl:listening:audio": "npx --yes tsx generated_ielts_tests/scripts/download-listening-audio.ts",
    "dl:listening:audio:all": "node -e \"const fs=require('fs');const {execSync}=require('child_process');fs.readdirSync('listening',{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const dir='listening/'+d.name; if(fs.existsSync(dir+'/fetch.html')) execSync('npx --yes tsx generated_ielts_tests/scripts/download-listening-audio.ts '+dir, {stdio:'inherit'});});\"",
    "gen:writing": "npx --yes tsx generated_ielts_tests/scripts/generate-writing.ts",
    "gen:writing:all": "node -e \"const fs=require('fs');const {execSync}=require('child_process');const base='generated_ielts_tests/writing';fs.readdirSync(base,{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const p=base+'/'+d.name+'/fetch.html'; if(fs.existsSync(p)) execSync('npx --yes tsx generated_ielts_tests/scripts/generate-writing.ts '+p, {stdio:'inherit'});});\"",
    "gen:writing:academic:all": "node -e \"const fs=require('fs');const {execSync}=require('child_process');const base='generated_ielts_tests/writing/academic';if(!fs.existsSync(base)){console.error('Missing '+base);process.exit(1);}fs.readdirSync(base,{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const dir=base+'/'+d.name; const p=dir+'/fetch.html'; if(fs.existsSync(p)) execSync('npx --yes tsx generated_ielts_tests/scripts/generate-writing.ts '+dir, {stdio:'inherit'});});\"",
    "gen:speaking": "npx --yes tsx generated_ielts_tests/scripts/generate-speaking.ts",
    "gen:speaking:all": "node -e \"const fs=require('fs');const {execSync}=require('child_process');const base='generated_ielts_tests/speaking';fs.readdirSync(base,{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const p=base+'/'+d.name+'/fetch.html'; if(fs.existsSync(p)) execSync('npx --yes tsx generated_ielts_tests/scripts/generate-speaking.ts '+p, {stdio:'inherit'});});\"",
    "gen:answers": "npx --yes tsx generated_ielts_tests/scripts/generate-answers.ts",
    "gen:answers:all:listening": "node -e \"const fs=require('fs');const {execSync}=require('child_process');const base='generated_ielts_tests/listening';fs.readdirSync(base,{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const dir=base+'/'+d.name; if(fs.existsSync(dir+'/fetch_answers.html')) execSync('npx --yes tsx generated_ielts_tests/scripts/generate-answers.ts '+dir, {stdio:'inherit'});});\"",
    "gen:answers:all:reading": "node -e \"const fs=require('fs');const {execSync}=require('child_process');const base='generated_ielts_tests/reading';fs.readdirSync(base,{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const dir=base+'/'+d.name; if(fs.existsSync(dir+'/fetch_answers.html')) execSync('npx --yes tsx generated_ielts_tests/scripts/generate-answers.ts '+dir, {stdio:'inherit'});});\"",
    "gen:listening:answers": "npx --yes tsx generated_ielts_tests/scripts/generate-listening-answers.ts",
    "gen:listening:answers:all": "node -e \"const fs=require('fs');const {execSync}=require('child_process');const base='generated_ielts_tests/listening';fs.readdirSync(base,{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const p=base+'/'+d.name+'/fetch_answers.html'; if(fs.existsSync(p)) execSync('npx --yes tsx generated_ielts_tests/scripts/generate-listening-answers.ts '+p, {stdio:'inherit'});});\"",
    "gen:reading": "npx --yes tsx generated_ielts_tests/scripts/generate-reading.ts",
    "gen:reading:all": "node -e \"const fs=require('fs');const {execSync}=require('child_process');const base='generated_ielts_tests/reading';fs.readdirSync(base,{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const dir=base+'/'+d.name; const p=dir+'/fetch.html'; if(fs.existsSync(p)) execSync('npx --yes tsx generated_ielts_tests/scripts/generate-reading.ts '+dir, {stdio:'inherit'});});\"",
    "dl:reading:answers": "npx --yes tsx generated_ielts_tests/scripts/download-reading-answers.ts",
    "dl:reading:answers:all": "node -e \"const fs=require('fs');const {execSync}=require('child_process');const base='generated_ielts_tests/reading';fs.readdirSync(base,{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const dir=base+'/'+d.name; execSync('npx --yes tsx generated_ielts_tests/scripts/download-reading-answers.ts '+dir, {stdio:'inherit'});});\"",
    "dl:writing:fetch": "npx --yes tsx generated_ielts_tests/scripts/download-writing-fetch.ts",
    "dl:writing:fetch:academic:all": "node -e \"const fs=require('fs');const {execSync}=require('child_process');const base='generated_ielts_tests/writing/academic';if(!fs.existsSync(base)){console.error('Missing '+base);process.exit(1);}fs.readdirSync(base,{withFileTypes:true}).filter(d=>d.isDirectory()).forEach(d=>{const dir=base+'/'+d.name; execSync('npx --yes tsx generated_ielts_tests/scripts/download-writing-fetch.ts --variant=academic '+dir, {stdio:'inherit'});});\"",
    "dl:writing:fetch:academic:one": "node -e \"const {execSync}=require('child_process');const [v,t]=process.argv.slice(1);if(!v||!t){console.error('Usage: npm run dl:writing:fetch:academic:one -- <vol> <test>');process.exit(1);}const dir='generated_ielts_tests/writing/academic/'+v+'-'+t; execSync('npx --yes tsx generated_ielts_tests/scripts/download-writing-fetch.ts --variant=academic '+dir, {stdio:'inherit'});\"",
    "dl:writing:fetch:general:one": "node -e \"const {execSync}=require('child_process');const [v,t]=process.argv.slice(1);if(!v||!t){console.error('Usage: npm run dl:writing:fetch:general:one -- <vol> <test>');process.exit(1);}const dir='generated_ielts_tests/writing/'+v+'-'+t; execSync('npx --yes tsx generated_ielts_tests/scripts/download-writing-fetch.ts --variant=general '+dir, {stdio:'inherit'});\""
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@mui/icons-material": "^7.1.1",
    "@mui/material": "^7.1.1",
    "@playwright/mcp": "^0.0.10",
    "@playwright/test": "^1.51.1",
    "@radix-ui/react-progress": "^1.1.6",
    "@radix-ui/react-slot": "^1.2.2",
    "@supabase/ssr": "0.6.1",
    "@supabase/supabase-js": "2.55.0",
    "@types/node": "^22.14.0",
    "@types/react": "^19.1.0",
    "@types/react-dom": "^19.1.1",
    "cheerio": "^1.1.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "express": "^5.1.0",
    "html-react-parser": "^5.2.5",
    "next": "^15.2.4",
    "playwright": "^1.51.1",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-h5-audio-player": "^3.10.0",
    "react-icons": "^5.5.0",
    "resend": "^4.7.0",
    "tailwind-merge": "^3.3.0",
    "typescript": "^5.8.3"
  },
  "devDependencies": {
    "autoprefixer": "^10.4.21",
    "nodemon": "^3.1.9",
    "postcss": "^8.5.3",
    "prettier": "^3.5.3",
    "tailwindcss": "^4.1.7"
  }
}
